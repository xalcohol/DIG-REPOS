local UIS = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local sellRemote = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Player_SellInventory")

local timerDuration = 2700 -- in seconds
local currentTime = timerDuration
local looping = false

local Players = game:GetService("Players")
local playerGui = Players.LocalPlayer:FindFirstChild("PlayerGui") or workspace
local hint -- declared globally for recreation

local function showHint(text)
    if hint then
        hint:Destroy()
    end
    hint = Instance.new("Hint")
    hint.Text = text
    hint.Parent = playerGui

    task.delay(0.999, function()
        if hint then
            hint:Destroy()
            hint = nil
        end
    end)
end

local function onTimerFinished()
    showHint("Timer finished! Selling...")
    sellRemote:FireServer()
end

local function startTimer()
    while looping do
        currentTime = timerDuration
        showHint("Auto Sell Timer: " .. currentTime)

        while currentTime > 0 and looping do
            task.wait(1)
            currentTime -= 1
            showHint("Auto Sell Timer: " .. currentTime)
        end

        if looping then
            onTimerFinished()
        end
    end
end

UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.J then
        looping = not looping

        if looping then
            showHint("Auto-sell + Timer started")
            task.spawn(startTimer)
        else
            showHint("Auto-sell + Timer stopped")
        end
    end
end)
